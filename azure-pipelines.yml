pool:
  name: Default

variables:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    feedsToUse: 'select'

- task: gitversion/setup@0
  displayName: Install GitVersion
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  inputs:
    versionSpec: '5.3.7'

- task: gitversion/execute@0
  displayName: gitversion execute
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  inputs:
    targetPath: '.\'
    additionalArguments: '/output buildserver /nofetch'
    updateAssemblyInfo: false

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'run tests'
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'nuget pack'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    includesymbols: true

- task: NuGetAuthenticate@0
  displayName: 'NuGet Authenticate'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

- task: NuGetCommand@2
  displayName: 'nuget push'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '236ceb97-cbc2-4f6b-bc66-9a1aed80cbd3'
    allowPackageConflicts: true
